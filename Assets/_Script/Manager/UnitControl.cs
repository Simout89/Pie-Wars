using System.Collections.Generic;
using UnityEngine;
using UnityEngine.AI;

public class UnitControl : MonoBehaviour
{
    private List<UnitModel> _selectedUnits = new(); 

    public void ClickOnUnit(UnitModel unitModel)
    {
        if (unitModel.TeamId == 0) // 0 - id –∏–≥—Ä–æ–∫–∞
        {
            foreach (var unit in _selectedUnits)
            {
                if (unit == unitModel)
                {
                    _selectedUnits.Remove(unit);
                    Debug.Log("–£–±—Ä–∞–Ω —é–Ω–∏—Ç: " + unit.name);
                    return;
                }
            }
            _selectedUnits.Add(unitModel);
            Debug.Log("–î–æ–±–∞–≤–ª–µ–Ω —é–Ω–∏—Ç: " + unitModel.name);
        }
        else
        {
            Debug.Log("–í—Ä–∞–∂–µ—Å–∫–∏–π —é–Ω–∏—Ç");
        }
    }
    
    public void ClickRMB(Vector3 coordinates, GameObject gameObject)
    {
        Debug.Log($"UnitControl: –ü–ö–ú –∫–æ–º–∞–Ω–¥–∞ –¥–≤–∏–∂–µ–Ω–∏—è –∫ {coordinates}");
        
        foreach (var unit in _selectedUnits)
        {
            // –û—Ç–º–µ–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–æ–±—ã—á–∏
            Unit unitComponent = unit.GetComponent<Unit>();
            if(unitComponent != null)
            {
                unitComponent.ClearCommandList();
                Debug.Log($"üõë –ö–æ–º–∞–Ω–¥—ã –æ—Ç–º–µ–Ω–µ–Ω—ã –¥–ª—è {unit.name}, –∏–¥–µ—Ç –∫ {coordinates}");
            }
            
            unit.GoTo(coordinates);
        }
        Debug.Log($"–ü–ö–ú: {_selectedUnits.Count} —é–Ω–∏—Ç–æ–≤ –ø–æ–ª—É—á–∏–ª–∏ –∫–æ–º–∞–Ω–¥—É –¥–≤–∏–∂–µ–Ω–∏—è");
    }
}